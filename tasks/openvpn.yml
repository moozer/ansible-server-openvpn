# setup openvpn

- name: install openvpn packages
  apt: name={{ item }} state=present
  with_items:
  - openvpn

- name: generating new dh primes
  shell: openssl dhparam -out {{ dhprimes_file_server }} {{ dhprimes_bitlength }}
  args:
    creates: "{{ dhprimes_file_server }}"

- name: add open vpn user
  user: name={{ openvpn_user }} shell=/usr/sbin/nologin createhome=no

- name: copy keys to server
  copy: src={{ item.src }} dest={{ item.dest }}
        owner=root group=root mode=0600
  with_items:
    - { src: "{{ easy_rsa_ta_crt_file }}",  dest: "{{ openvpn_ta_crt_file }}"  }
    - { src: "{{ easy_rsa_ca_crt_file }}",  dest: "{{ openvpn_ca_crt_file }}"  }
    - { src: "{{ easy_rsa_server_crt_file }}", dest: "{{ openvpn_server_crt_file }}" }
    - { src: "{{ easy_rsa_server_key_file }}", dest: "{{ openvpn_server_key_file }}" }

- name: copy config file to server
  template: src=server.conf.j2 dest={{ openvpn_dir }}/{{ openvpn_conf_name }}.conf
  notify: start openvpn server

- name: create log dir
  file: path={{ openvpn_log_dir }} state=directory recurse=true

- name: create empty log file
  command: "touch {{ openvpn_log_dir }}/{{ openvpn_log_file }}"
  args:
    creates: "{{ openvpn_log_dir }}/{{ openvpn_log_file }}"

- name: create empty status log file
  command: "touch {{ openvpn_log_dir }}/{{ openvpn_status_log_file }}"
  args:
    creates: "{{ openvpn_log_dir }}/{{ openvpn_status_log_file }}"

- name: enable openvpn service
  service: name="openvpn@{{ openvpn_conf_name }}" enabled=yes

- name: enable forwarding
  sysctl: name="net.ipv4.ip_forward" value=1 sysctl_set=yes state=present reload=yes

- name: check rc.local
  stat: path=/etc/rc.local
  register: rc_local_stat

- name: create rc.local, if not exists
  template:
    src: etc_rc.local.j2
    dest: /etc/rc.local
    mode: 0755
    owner: root
    group: root
  when: not rc_local_stat.stat.exists

- name: add nat firewall
  template: src=fw_nat.sh dest=/etc/fw_nat.sh mode=0700

- name: add firewall to startup
  lineinfile: dest=/etc/rc.local line="/etc/fw_nat.sh"
    state=present insertbefore="exit 0"
  notify: run rc.local
