# setup openvpn

- name: install openvpn packages
  apt: name={{ item }} state=present
  with_items:
  - openvpn

- name: generating new dh primes
  shell: openssl dhparam -out {{ dhprimes_file_server }} {{ dhprimes_bitlength }}
  args:
    creates: "{{ dhprimes_file_server }}"

- name: add open vpn user
  user: name={{ openvpn_user }} shell=/usr/sbin/nologin createhome=no

- name: copy keys to server
  copy: src={{ item.src }} dest={{ item.dest }} 
        owner=root group=root mode=0600
  with_items:
    - { src: "{{ easy_rsa_ta_crt_file }}",  dest: "{{ openvpn_ta_crt_file }}"  }
    - { src: "{{ easy_rsa_ca_crt_file }}",  dest: "{{ openvpn_ca_crt_file }}"  }    
    - { src: "{{ easy_rsa_server_crt_file }}", dest: "{{ openvpn_server_crt_file }}" }
    - { src: "{{ easy_rsa_server_key_file }}", dest: "{{ openvpn_server_key_file }}" }

- name: copy config file to server
  template: src=server.conf.j2 dest={{ openvpn_dir }}/server.conf
  notify: restart openvpn

- name: create log dir
  file: path={{ openvpn_log_dir }} state=directory recurse=true

- name: create empty log file
  command: "touch {{ openvpn_log_dir }}/{{ openvpn_log_file }}"
  args:
    creates: "{{ openvpn_log_dir }}/{{ openvpn_log_file }}"
    
- name: create empty status log file
  command: "touch {{ openvpn_log_dir }}/{{ openvpn_status_log_file }}"
  args:
    creates: "{{ openvpn_log_dir }}/{{ openvpn_status_log_file }}"

- name: enable openvpn service
  service: name=openvpn enabled=yes
